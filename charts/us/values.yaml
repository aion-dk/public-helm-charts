dbb:
  image:
    repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/dbb
    tag: dev-c4588ae11dcb820e9cade97dfe637890f142491f

dbas:
  image:
    repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/dbas
    tag: 03710aae95bfa3c968a30ab206df229049ed3f4b

va:
  image:
    repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/voter-authorizer
    tag: 2760cad8863a225099e7ebfb398266698aca313c
  allowAllVoters: "false"
  voterRegistry:
    endpoint: https://wdgxz5zqf7.execute-api.us-east-1.amazonaws.com/development-v3-1-2/lookupVoterEmail
    apiKey:
      valueFrom:
        secretKeyRef:
          key: VOTER_REGISTRY_API_KEY
          name: voter-registry-api-key

vmb:
  image:
    repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/verify-my-ballot
    tag: aaff20e7ff04192f8642b699959264fece65beb3

svs:
  api:
    image:
      repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/svs-api
      tag: dev-ec9e4ef1f86678f87fc8b7cc39507065fdaa7da9

otp:
  image:
    repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/one-time-password-provider
    tag: 0ca8275359e173c64bb5abae11fc5d588aeb5d80
  peytzMailToken:
    valueFrom:
      secretKeyRef:
        key: PEYTZ_MAIL_TOKEN
        name: peytz-mail-token

avx:
  provisioner:
    apiUrl: ""
    uiUrl: ""
  image:
    repository: 534003348933.dkr.ecr.eu-west-1.amazonaws.com/avx
    tag: dev-c1f9bc9b36a9bd3757365d4175821a80bc00728d

# If enabled, uses PersistentVolumeClaims, otherwise uses emptyDirs
persistence:
  enabled: true
  allocatedStorage: 1Gi

# These secret names must reflect those generated in the test-deployment/04-deployment
# stage in (terraform-main)[https://github.com/aion-dk/terraform-main/blob/main/environments/exoscale-development/dev-us-1/04-deployment/main.tf]
databaseCredentials:
  dbb: "dbb-development-database-credentials"
  otp: "otp-provider-development-database-credentials"
  va:  "voter-authorizer-development-database-credentials"
  avx: "avx-development-database-credentials"

# SECRET_KEY_BASE used by Conference's web application.
secretKeyBase:
  valueFrom:
    secretKeyRef:
      key: SECRET_KEY_BASE
      name: rails-secret-key-base

# You can also use letesencrypt-staging to use staging certificates instead.
# Note that staging certificates are not trusted, and therefore might fail
# verification when accessed via browser, or from another service.
certificateIssuer: "letsencrypt-production"

# This is deployed as part of the [terraform-main](https://github.com/aion-dk/terraform-main) project
# using the (terraform-ecr-pull-secrets)[https://github.com/aion-dk/terraform-ecr-pull-secrets] module
# as part of pre-configuration of the namespace prior to deployment.
imagePullSecrets:
- name: av-ecr-private-registry
